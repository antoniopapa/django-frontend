{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/auth.ts","webpack:///src/app/classes/permission.ts","webpack:///src/app/interceptors/token.interceptor.ts","webpack:///src/app/public/login/login.component.ts","webpack:///src/app/public/login/login.component.html","webpack:///src/app/public/public.component.ts","webpack:///src/app/public/public.component.html","webpack:///src/app/public/public.module.ts","webpack:///src/app/public/register/register.component.ts","webpack:///src/app/public/register/register.component.html","webpack:///src/app/secure/components/image-upload/image-upload.component.ts","webpack:///src/app/secure/components/image-upload/image-upload.component.html","webpack:///src/app/secure/components/paginator/paginator.component.ts","webpack:///src/app/secure/components/paginator/paginator.component.html","webpack:///src/app/secure/dashboard/dashboard.component.ts","webpack:///src/app/secure/dashboard/dashboard.component.html","webpack:///src/app/secure/menu/menu.component.ts","webpack:///src/app/secure/menu/menu.component.html","webpack:///src/app/secure/nav/nav.component.ts","webpack:///src/app/secure/nav/nav.component.html","webpack:///src/app/secure/orders/order-view/order-view.component.ts","webpack:///src/app/secure/orders/order-view/order-view.component.html","webpack:///src/app/secure/orders/orders.component.ts","webpack:///src/app/secure/orders/orders.component.html","webpack:///src/app/secure/products/product-create/product-create.component.ts","webpack:///src/app/secure/products/product-create/product-create.component.html","webpack:///src/app/secure/products/product-edit/product-edit.component.ts","webpack:///src/app/secure/products/product-edit/product-edit.component.html","webpack:///src/app/secure/products/products.component.ts","webpack:///src/app/secure/products/products.component.html","webpack:///src/app/secure/profile/profile.component.ts","webpack:///src/app/secure/profile/profile.component.html","webpack:///src/app/secure/roles/role-create/role-create.component.ts","webpack:///src/app/secure/roles/role-create/role-create.component.html","webpack:///src/app/secure/roles/role-edit/role-edit.component.ts","webpack:///src/app/secure/roles/role-edit/role-edit.component.html","webpack:///src/app/secure/roles/roles.component.ts","webpack:///src/app/secure/roles/roles.component.html","webpack:///src/app/secure/secure.component.ts","webpack:///src/app/secure/secure.component.html","webpack:///src/app/secure/secure.module.ts","webpack:///src/app/secure/users/user-create/user-create.component.ts","webpack:///src/app/secure/users/user-create/user-create.component.html","webpack:///src/app/secure/users/user-edit/user-edit.component.ts","webpack:///src/app/secure/users/user-edit/user-edit.component.html","webpack:///src/app/secure/users/users.component.ts","webpack:///src/app/secure/users/users.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/image.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/permission.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/rest.service.ts","webpack:///src/app/services/role.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","canActivate","data","permissions","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","Auth","_user","filter","p","indexOf","length","user","userEmitter","emit","Permission","route","state","canAccess","providedIn","TokenInterceptor","request","next","clone","withCredentials","handle","LoginComponent","formBuilder","authService","router","form","group","email","password","getRawValue","login","subscribe","res","navigate","submit","PublicComponent","PublicModule","RegisterComponent","first_name","last_name","password_confirm","register","console","log","ImageUploadComponent","imageService","fileUploadedEmitter","files","file","item","FormData","append","upload","url","PaginatorComponent","pageChanged","currentPage","lastPage","prev","DashboardComponent","orderService","chart","bindto","x","columns","types","Sales","axis","type","tick","format","records","load","map","r","date","sum","MenuComponent","NavComponent","logout","OrderViewComponent","orderItems","params","get","order_items","OrdersComponent","orders","refresh","all","meta","last_page","blob","Blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","click","ProductCreateComponent","productService","description","image","price","create","ProductEditComponent","product","patchValue","update","ProductsComponent","products","confirm","el","ProfileComponent","infoForm","passwordForm","updateInfo","updatePassword","infoSubmit","passwordSubmit","RoleCreateComponent","permissionService","roleService","name","array","forEach","permissionArray","push","value","formData","RoleEditComponent","role","values","selected","rolePermission","RolesComponent","roles","SecureComponent","err","SecureModule","UserCreateComponent","userService","role_id","UserEditComponent","UsersComponent","users","AuthService","http","post","api","put","ImageService","OrderService","responseType","PermissionService","ProductService","RestService","page","endpoint","RoleService","UserService","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from \"./public/login/login.component\";\nimport {SecureComponent} from \"./secure/secure.component\";\nimport {RegisterComponent} from \"./public/register/register.component\";\nimport {PublicComponent} from \"./public/public.component\";\nimport {DashboardComponent} from \"./secure/dashboard/dashboard.component\";\nimport {UsersComponent} from \"./secure/users/users.component\";\nimport {ProfileComponent} from \"./secure/profile/profile.component\";\nimport {UserCreateComponent} from \"./secure/users/user-create/user-create.component\";\nimport {UserEditComponent} from \"./secure/users/user-edit/user-edit.component\";\nimport {RolesComponent} from \"./secure/roles/roles.component\";\nimport {RoleCreateComponent} from \"./secure/roles/role-create/role-create.component\";\nimport {RoleEditComponent} from \"./secure/roles/role-edit/role-edit.component\";\nimport {ProductsComponent} from \"./secure/products/products.component\";\nimport {ProductCreateComponent} from \"./secure/products/product-create/product-create.component\";\nimport {ProductEditComponent} from \"./secure/products/product-edit/product-edit.component\";\nimport {OrdersComponent} from \"./secure/orders/orders.component\";\nimport {OrderViewComponent} from \"./secure/orders/order-view/order-view.component\";\nimport {Permission} from \"./classes/permission\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecureComponent,\n    children: [\n      {path: '', redirectTo: '/dashboard', pathMatch: 'full'},\n      {path: 'dashboard', component: DashboardComponent},\n      {path: 'profile', component: ProfileComponent},\n      {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_users', 'edit_users']}\n      },\n      {path: 'users/create', component: UserCreateComponent},\n      {path: 'users/:id/edit', component: UserEditComponent},\n      {\n        path: 'roles',\n        component: RolesComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_roles', 'edit_roles']}\n      },\n      {path: 'roles/create', component: RoleCreateComponent},\n      {path: 'roles/:id/edit', component: RoleEditComponent},\n      {\n        path: 'products',\n        component: ProductsComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_products', 'edit_products']}\n      },\n      {path: 'products/create', component: ProductCreateComponent},\n      {path: 'products/:id/edit', component: ProductEditComponent},\n      {\n        path: 'orders',\n        component: OrdersComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_orders', 'edit_orders']}\n      },\n      {path: 'orders/:id', component: OrderViewComponent},\n    ]\n  },\n  {\n    path: '',\n    component: PublicComponent,\n    children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {SecureModule} from \"./secure/secure.module\";\nimport {PublicModule} from \"./public/public.module\";\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {TokenInterceptor} from \"./interceptors/token.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SecureModule,\n    PublicModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {User} from \"../interfaces/user\";\nimport {EventEmitter} from \"@angular/core\";\n\nexport class Auth {\n  private static _user: User;\n  static userEmitter = new EventEmitter<User>();\n\n  static set user(user: User) {\n    this._user = user;\n    this.userEmitter.emit(user);\n  }\n\n  static get user(): User {\n    return this._user;\n  }\n\n  static canAccess(permissions) {\n    if (!this._user) {\n      return false;\n    }\n\n    return this._user.permissions.filter(p => permissions.indexOf(p) !== -1).length > 0;\n  }\n}\n","import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\nimport {Auth} from \"./auth\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Permission implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Auth.canAccess(route.data.permissions) || false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpHeaders\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const req = request.clone({\n      withCredentials: true\n    });\n\n    return next.handle(req);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {Response} from \"../../interfaces/response\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss', './../public.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.authService.login(data).subscribe(\n      (res: any) => {\n        this.router.navigate(['/dashboard']);\n      }\n    )\n  }\n}\n","<form class=\"form-signin\" [formGroup]=\"form\" (submit)=\"submit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n  <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n  <input type=\"email\" formControlName=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" formControlName=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.scss']\n})\nexport class PublicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {PublicComponent} from './public.component';\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    PublicComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class PublicModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss', './../public.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      password_confirm: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.authService.register(data).subscribe(\n      res => {\n        console.log(res);\n      }\n    );\n  }\n}\n","<form class=\"form-signin\" [formGroup]=\"form\" (submit)=\"submit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n  <label for=\"firstName\" class=\"sr-only\">First Name</label>\n  <input type=\"text\" formControlName=\"first_name\" id=\"firstName\" class=\"form-control\" placeholder=\"First Name\" required autofocus>\n\n  <label for=\"lastName\" class=\"sr-only\">LastName</label>\n  <input type=\"text\" formControlName=\"last_name\" id=\"lastName\" class=\"form-control\" placeholder=\"LastName\" required autofocus>\n\n  <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n  <input type=\"email\" formControlName=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" formControlName=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n\n  <label for=\"inputPasswordConfirm\" class=\"sr-only\">Password Confirm</label>\n  <input type=\"password\" formControlName=\"password_confirm\" id=\"inputPasswordConfirm\" class=\"form-control\" placeholder=\"Password Confirm\" required>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n</form>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ImageService} from \"../../../services/image.service\";\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.scss']\n})\nexport class ImageUploadComponent implements OnInit {\n  @Output('fileUploaded') fileUploadedEmitter = new EventEmitter<string>();\n\n  constructor(private imageService: ImageService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  upload(files: FileList) {\n    const file = files.item(0);\n\n    const data = new FormData();\n    data.append('image', file);\n\n    this.imageService.upload(data).subscribe(\n      (res: any) => {\n        this.fileUploadedEmitter.emit(res.url);\n      }\n    );\n  }\n}\n","<label class=\"btn btn-primary\">\n  Upload <input type=\"file\" hidden (change)=\"upload($event.target.files)\">\n</label>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss']\n})\nexport class PaginatorComponent implements OnInit {\n  @Input('lastPage') lastPage;\n  @Output('pageChanged') pageChanged = new EventEmitter<number>();\n  currentPage = 1;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  prev() {\n    if (this.currentPage === 1) return;\n\n    this.currentPage--;\n    this.pageChanged.emit(this.currentPage);\n  }\n\n  next() {\n    if (this.currentPage === this.lastPage) return;\n\n    this.currentPage++;\n    this.pageChanged.emit(this.currentPage);\n  }\n}\n","<nav>\n  <ul class=\"pagination\">\n    <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"prev()\">Previous</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"next()\">Next</a></li>\n  </ul>\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../services/order.service\";\nimport {Response} from \"../../interfaces/response\";\nimport * as c3 from 'c3';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private orderService: OrderService) {\n  }\n\n  ngOnInit(): void {\n    let chart = c3.generate({\n      bindto: '#chart',\n      data: {\n        x: 'x',\n        columns: [\n          ['x'],\n          ['Sales'],\n        ],\n        types: {\n          Sales: 'bar'\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: '%Y-%m-%d'\n          }\n        }\n      }\n    });\n\n    this.orderService.chart().subscribe(\n      (res: Response) => {\n        const records = res.data;\n\n        chart.load({\n          columns: [\n            ['x', ...records.map(r => r.date)],\n            ['Sales', ...records.map(r => r.sum)]\n          ]\n        });\n      }\n    );\n  }\n\n}\n","<h2>Daily Sales</h2>\n\n<div id=\"chart\"></div>\n","import {Component, OnInit} from '@angular/core';\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n  <div class=\"sidebar-sticky pt-3\">\n    <ul class=\"nav flex-column\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_users', 'edit_users'])\">\n        <a class=\"nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_roles', 'edit_roles'])\">\n        <a class=\"nav-link\" routerLink=\"/roles\" routerLinkActive=\"active\">Roles</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_products', 'edit_products'])\">\n        <a class=\"nav-link\" routerLink=\"/products\" routerLinkActive=\"active\">Products</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_orders', 'edit_orders'])\">\n        <a class=\"nav-link\" routerLink=\"/orders\" routerLinkActive=\"active\">Orders</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {User} from \"../../interfaces/user\";\nimport {Router} from \"@angular/router\";\nimport {Auth} from \"../../classes/auth\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  user: User = null;\n\n  constructor(private router: Router, private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    Auth.userEmitter.subscribe(\n      (user: User) => {\n        this.user = user;\n      }\n    );\n  }\n\n  logout() {\n    this.authService.logout({}).subscribe(\n      () => {\n        this.router.navigate(['/login']);\n      }\n    )\n  }\n\n}\n","<nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n  <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"#\">Company name</a>\n\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"p-2 text-white\" routerLink=\"/profile\">{{user?.first_name}} {{user?.last_name}}</a>\n    <a class=\"p-2 text-white\" href=\"javascript:void(0)\" (click)=\"logout()\">Sign out</a>\n  </nav>\n</nav>\n\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../../services/order.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\nimport {OrderItem} from \"../../../interfaces/order-item\";\n\n@Component({\n  selector: 'app-order-view',\n  templateUrl: './order-view.component.html',\n  styleUrls: ['./order-view.component.scss']\n})\nexport class OrderViewComponent implements OnInit {\n  orderItems: OrderItem[] = []\n\n  constructor(\n    private orderService: OrderService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      params => {\n        this.orderService.get(params.id).subscribe(\n          (res: Response) => {\n            this.orderItems = res.data.order_items;\n          }\n        )\n      }\n    )\n  }\n\n}\n","<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Product Title</th>\n        <th>Price</th>\n        <th>Quantity</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let orderItem of orderItems\">\n        <td>{{orderItem.id}}</td>\n        <td>{{orderItem.product_title}}</td>\n        <td>{{orderItem.price}}</td>\n        <td>{{orderItem.quantity}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../services/order.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Order} from \"../../interfaces/order\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[] = [];\n  lastPage: number;\n\n  constructor(\n    private orderService: OrderService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.orderService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.orders = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    );\n  }\n\n  export() {\n    this.orderService.export().subscribe(\n      res => {\n        const blob = new Blob([res], {type: 'text/csv'});\n        const downloadUrl = window.URL.createObjectURL(res);\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.download = 'orders.csv';\n        link.click();\n      }\n    )\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_orders'])\">\n    <a href=\"javascript:void(0)\" (click)=\"export()\" class=\"btn btn-sm btn-outline-secondary\">Export</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Total</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orders\">\n        <td>{{order.id}}</td>\n        <td>{{order.first_name}} {{order.last_name}}</td>\n        <td>{{order.email}}</td>\n        <td>{{order.total}}</td>\n        <td>\n          <div class=\"btn-group mr-2\">\n            <a [routerLink]=\"['/orders', order.id]\" class=\"btn btn-sm btn-outline-secondary\">View</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {Router} from \"@angular/router\";\nimport {ImageService} from \"../../../services/image.service\";\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      title: '',\n      description: '',\n      image: '',\n      price: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.productService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/products']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\">\n  </div>\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea class=\"form-control\" name=\"description\" formControlName=\"description\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label>Image</label>\n    <div class=\"input-group\">\n      <input #image type=\"text\" class=\"form-control\" name=\"Image\" formControlName=\"image\">\n      <div class=\"input-group-append\">\n        <app-image-upload (fileUploaded)=\"image.value = $event\"></app-image-upload>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Price</label>\n    <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\">\n  </div>\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Product} from \"../../../interfaces/product\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit {\n  form: FormGroup;\n  product: Product;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      title: '',\n      description: '',\n      image: '',\n      price: ''\n    });\n\n    this.route.params.subscribe(\n      params => {\n        this.productService.get(params.id).subscribe(\n          (res: Response) => {\n            this.product = res.data;\n            this.form.patchValue(this.product);\n          }\n        )\n      }\n    )\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.productService.update(this.product.id, data).subscribe(\n      res => {\n        this.router.navigate(['/products']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\">\n  </div>\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea class=\"form-control\" name=\"description\" formControlName=\"description\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label>Image</label>\n    <div class=\"input-group\">\n      <input #image type=\"text\" class=\"form-control\" name=\"Image\" formControlName=\"image\">\n      <div class=\"input-group-append\">\n        <app-image-upload (fileUploaded)=\"form.patchValue({image: $event})\"></app-image-upload>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Price</label>\n    <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\">\n  </div>\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Product} from \"../../interfaces/product\";\nimport {ProductService} from \"../../services/product.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  products: Product[] = [];\n  lastPage: number;\n\n  constructor(\n    private productService: ProductService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.productService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.products = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.productService.delete(id).subscribe(\n        res => {\n          this.products = this.products.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_products'])\">\n    <a routerLink=\"/products/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Image</th>\n        <th>Title</th>\n        <th>Description</th>\n        <th>Price</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of products\">\n        <td>{{product.id}}</td>\n        <td><img [src]=\"product.image\" width=\"50\" height=\"50\" /></td>\n        <td>{{product.title}}</td>\n        <td>{{product.description}}</td>\n        <td>{{product.price}}</td>\n        <td>\n          <div class=\"btn-group mr-2\" *ngIf=\"canAccess(['edit_products'])\">\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/products', product.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n            <a href=\"javascript:void(0)\" (click)=\"delete(product.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Auth} from \"../../classes/auth\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {User} from \"../../interfaces/user\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  infoForm: FormGroup;\n  passwordForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    const user = Auth.user;\n\n    this.infoForm = this.formBuilder.group({\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n\n    this.passwordForm = this.formBuilder.group({\n      password: '',\n      password_confirm: ''\n    });\n  }\n\n  infoSubmit() {\n    const data = this.infoForm.getRawValue();\n\n    this.authService.updateInfo(data).subscribe(\n      (user: User) => {\n        Auth.user = user;\n      }\n    );\n  }\n\n  passwordSubmit() {\n    const data = this.passwordForm.getRawValue();\n\n    this.authService.updatePassword(data).subscribe(\n      res => {\n        console.log(res);\n      }\n    );\n  }\n\n}\n","<h2>Account Information</h2>\n<hr>\n<form [formGroup]=\"infoForm\" (submit)=\"infoSubmit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" formControlName=\"first_name\" class=\"form-control\" name=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" formControlName=\"last_name\" class=\"form-control\" name=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\" name=\"email\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n\n<h2 class=\"mt-4\">Change Password</h2>\n<hr>\n<form [formGroup]=\"passwordForm\" (submit)=\"passwordSubmit()\">\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" name=\"password\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password Confirm</label>\n    <input type=\"password\" formControlName=\"password_confirm\" class=\"form-control\" name=\"password_confirm\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {PermissionService} from \"../../../services/permission.service\";\nimport {Response} from \"../../../interfaces/response\";\nimport {Permission} from \"../../../interfaces/permission\";\nimport {FormArray, FormBuilder, FormGroup} from \"@angular/forms\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-role-create',\n  templateUrl: './role-create.component.html',\n  styleUrls: ['./role-create.component.scss']\n})\nexport class RoleCreateComponent implements OnInit {\n  permissions: Permission[] = [];\n  form: FormGroup;\n\n  constructor(\n    private permissionService: PermissionService,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: '',\n      permissions: this.formBuilder.array([])\n    })\n\n    this.permissionService.all().subscribe(\n      (res: Response) => {\n        this.permissions = res.data;\n        this.permissions.forEach((p: Permission) => {\n          this.permissionArray.push(\n            this.formBuilder.group({\n              value: false,\n              id: p.id\n            })\n          )\n        });\n      }\n    )\n  }\n\n  get permissionArray() {\n    return this.form.get('permissions') as FormArray;\n  }\n\n  submit() {\n    const formData = this.form.getRawValue();\n\n    const data = {\n      name: formData.name,\n      permissions: formData.permissions.filter(p => p.value === true).map(p => p.id)\n    };\n\n    this.roleService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/roles']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\" id=\"name\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\" formArrayName=\"permissions\">\n    <label class=\"col-sm-2 col-form-label\">Permissions</label>\n    <div class=\"col-sm-10\">\n      <div class=\"form-check form-check-inline col-3\" *ngFor=\"let permission of permissions; let i = index\" [formGroupName]=\"i\">\n        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"value\">\n        <label class=\"form-check-label\">{{permission.name}}</label>\n      </div>\n    </div>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Permission} from \"../../../interfaces/permission\";\nimport {FormArray, FormBuilder, FormGroup} from \"@angular/forms\";\nimport {PermissionService} from \"../../../services/permission.service\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\nimport {Role} from \"../../../interfaces/role\";\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.component.html',\n  styleUrls: ['./role-edit.component.scss']\n})\nexport class RoleEditComponent implements OnInit {\n  permissions: Permission[] = [];\n  form: FormGroup;\n  role: Role;\n\n  constructor(\n    private permissionService: PermissionService,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: '',\n      permissions: this.formBuilder.array([])\n    })\n\n    this.permissionService.all().subscribe(\n      (res: Response) => {\n        this.permissions = res.data;\n        this.permissions.forEach((p: Permission) => {\n          this.permissionArray.push(\n            this.formBuilder.group({\n              value: false,\n              id: p.id\n            })\n          )\n        });\n      }\n    );\n\n    this.route.params.subscribe(\n      params => {\n        this.roleService.get(params.id).subscribe(\n          (res: Response) => {\n            this.role = res.data;\n            let values = this.permissions.map((p: Permission) => {\n              let selected = this.role.permissions\n                .filter((rolePermission: Permission) => rolePermission.id === p.id).length > 0;\n\n              return {\n                value: selected,\n                id: p.id\n              }\n            });\n\n            this.form.patchValue({\n              name: this.role.name,\n              permissions: values\n            });\n          }\n        )\n      }\n    )\n  }\n\n  get permissionArray() {\n    return this.form.get('permissions') as FormArray;\n  }\n\n  submit() {\n    const formData = this.form.getRawValue();\n\n    const data = {\n      name: formData.name,\n      permissions: formData.permissions.filter(p => p.value === true).map(p => p.id)\n    };\n\n    this.roleService.update(this.role.id, data).subscribe(\n      res => {\n        this.router.navigate(['/roles']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\" id=\"name\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\" formArrayName=\"permissions\">\n    <label class=\"col-sm-2 col-form-label\">Permissions</label>\n    <div class=\"col-sm-10\">\n      <div class=\"form-check form-check-inline col-3\" *ngFor=\"let permission of permissions; let i = index\" [formGroupName]=\"i\">\n        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"value\">\n        <label class=\"form-check-label\">{{permission.name}}</label>\n      </div>\n    </div>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {Role} from \"../../interfaces/role\";\nimport {RoleService} from \"../../services/role.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n  roles: Role[] = [];\n\n  constructor(private roleService: RoleService) { }\n\n  ngOnInit(): void {\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.roleService.delete(id).subscribe(\n        res => {\n          this.roles = this.roles.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_roles'])\">\n    <a routerLink=\"/roles/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let role of roles\">\n        <td>{{role.id}}</td>\n        <td>{{role.name}}</td>\n        <td>\n            <div class=\"btn-group mr-2\" *ngIf=\"canAccess(['edit_roles'])\">\n              <a href=\"javascript:void(0)\" [routerLink]=\"['/roles', role.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n              <a href=\"javascript:void(0)\" (click)=\"delete(role.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n            </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../interfaces/user\";\nimport {Auth} from \"../classes/auth\";\nimport {Response} from \"../interfaces/response\";\n\n@Component({\n  selector: 'app-secure',\n  templateUrl: './secure.component.html',\n  styleUrls: ['./secure.component.scss']\n})\nexport class SecureComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.authService.user().subscribe(\n      (res: Response) => {\n        this.user = res.data;\n        Auth.user = this.user;\n      },\n      err => {\n        this.router.navigate(['/login']);\n      }\n    )\n  }\n\n}\n","<app-nav></app-nav>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <app-menu></app-menu>\n\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n      <router-outlet *ngIf=\"user\"></router-outlet>\n    </main>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SecureComponent} from './secure.component';\nimport {NavComponent} from \"./nav/nav.component\";\nimport {MenuComponent} from \"./menu/menu.component\";\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {UsersComponent} from './users/users.component';\nimport {RouterModule} from \"@angular/router\";\nimport {ProfileComponent} from './profile/profile.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {UserCreateComponent} from './users/user-create/user-create.component';\nimport {UserEditComponent} from './users/user-edit/user-edit.component';\nimport {RolesComponent} from './roles/roles.component';\nimport {RoleCreateComponent} from './roles/role-create/role-create.component';\nimport {RoleEditComponent} from './roles/role-edit/role-edit.component';\nimport {ProductsComponent} from './products/products.component';\nimport { PaginatorComponent } from './components/paginator/paginator.component';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { ImageUploadComponent } from './components/image-upload/image-upload.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderViewComponent } from './orders/order-view/order-view.component';\n\n\n@NgModule({\n  declarations: [\n    SecureComponent,\n    NavComponent,\n    MenuComponent,\n    DashboardComponent,\n    UsersComponent,\n    ProfileComponent,\n    UserCreateComponent,\n    UserEditComponent,\n    RolesComponent,\n    RoleCreateComponent,\n    RoleEditComponent,\n    ProductsComponent,\n    PaginatorComponent,\n    ProductCreateComponent,\n    ProductEditComponent,\n    ImageUploadComponent,\n    OrdersComponent,\n    OrderViewComponent\n  ],\n  exports: [\n    SecureComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SecureModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {Role} from \"../../../interfaces/role\";\nimport {UserService} from \"../../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  form: FormGroup;\n  roles: Role[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private roleService: RoleService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      role_id: ''\n    });\n\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    )\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.userService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/users']);\n      }\n    );\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"first_name\" formControlName=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"last_name\" formControlName=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" class=\"form-control\" name=\"email\" formControlName=\"email\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select name=\"role_id\" class=\"form-control\" formControlName=\"role_id\">\n      <option *ngFor=\"let role of roles\" [ngValue]=\"role.id\">\n        {{role.name}}\n      </option>\n    </select>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Role} from \"../../../interfaces/role\";\nimport {UserService} from \"../../../services/user.service\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {User} from \"../../../interfaces/user\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  form: FormGroup;\n  roles: Role[] = [];\n  user: User;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private roleService: RoleService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      role_id: ''\n    });\n\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    );\n\n    this.route.params.subscribe(\n      params => {\n        this.userService.get(params.id).subscribe(\n          (res: Response) => {\n            this.user = res.data;\n            this.form.patchValue({\n              first_name: this.user.first_name,\n              last_name: this.user.last_name,\n              email: this.user.email,\n              role_id: this.user.role.id\n            });\n          }\n        )\n      }\n    );\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.userService.update(this.user.id, data).subscribe(\n      res => {\n        this.router.navigate(['/users']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"first_name\" formControlName=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"last_name\" formControlName=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" class=\"form-control\" name=\"email\" formControlName=\"email\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select name=\"role_id\" class=\"form-control\" formControlName=\"role_id\">\n      <option *ngFor=\"let role of roles\" [ngValue]=\"role.id\">\n        {{role.name}}\n      </option>\n    </select>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../interfaces/user\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  lastPage: number;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.userService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.users = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.userService.delete(id).subscribe(\n        res => {\n          this.users = this.users.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_users'])\">\n    <a routerLink=\"/users/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Role</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{user.id}}</td>\n        <td>{{user.first_name}} {{user.last_name}}</td>\n        <td>{{user.email}}</td>\n        <td>{{user.role.name}}</td>\n        <td>\n          <div class=\"btn-group mr-2\"  *ngIf=\"canAccess(['edit_users'])\">\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/users', user.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n            <a href=\"javascript:void(0)\" (click)=\"delete(user.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  login(data) {\n    return this.http.post(`${environment.api}/login`, data);\n  }\n\n  logout(data) {\n    return this.http.post(`${environment.api}/logout`, data);\n  }\n\n  register(data) {\n    return this.http.post(`${environment.api}/register`, data);\n  }\n\n  user() {\n    return this.http.get(`${environment.api}/user`);\n  }\n\n  updateInfo(data) {\n    return this.http.put(`${environment.api}/users/info`, data);\n  }\n\n  updatePassword(data) {\n    return this.http.put(`${environment.api}/users/password`, data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  upload(data) {\n    return this.http.post(`${environment.api}/upload`, data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService extends RestService {\n  endpoint(): string {\n    return \"orders\";\n  }\n\n  export() {\n    return this.http.get(`${environment.api}/export`, {responseType: 'blob'});\n  }\n\n  chart(){\n    return this.http.get(`${environment.api}/chart`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionService extends RestService {\n  endpoint(): string {\n    return \"permissions\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService extends RestService {\n  endpoint(): string {\n    return \"products\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RestService {\n\n  abstract endpoint(): string;\n\n  constructor(protected http: HttpClient) {\n  }\n\n  get url() {\n    return `${environment.api}/${this.endpoint()}`;\n  }\n\n  all(page?: number) {\n    let url = this.url;\n\n    if (page) {\n      url += `?page=${page}`;\n    }\n\n    return this.http.get(url);\n  }\n\n  get(id: number) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(this.url, data);\n  }\n\n  update(id: number, data) {\n    return this.http.put(`${this.url}/${id}`, data);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends RestService {\n  endpoint(): string {\n    return \"roles\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends RestService {\n  endpoint(): string {\n    return \"users\";\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}