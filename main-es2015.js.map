{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/auth.ts","./src/app/classes/permission.ts","./src/app/interceptors/token.interceptor.ts","./src/app/public/login/login.component.ts","./src/app/public/login/login.component.html","./src/app/public/public.component.ts","./src/app/public/public.component.html","./src/app/public/public.module.ts","./src/app/public/register/register.component.ts","./src/app/public/register/register.component.html","./src/app/secure/components/image-upload/image-upload.component.ts","./src/app/secure/components/image-upload/image-upload.component.html","./src/app/secure/components/paginator/paginator.component.ts","./src/app/secure/components/paginator/paginator.component.html","./src/app/secure/dashboard/dashboard.component.ts","./src/app/secure/dashboard/dashboard.component.html","./src/app/secure/menu/menu.component.ts","./src/app/secure/menu/menu.component.html","./src/app/secure/nav/nav.component.ts","./src/app/secure/nav/nav.component.html","./src/app/secure/orders/order-view/order-view.component.ts","./src/app/secure/orders/order-view/order-view.component.html","./src/app/secure/orders/orders.component.ts","./src/app/secure/orders/orders.component.html","./src/app/secure/products/product-create/product-create.component.ts","./src/app/secure/products/product-create/product-create.component.html","./src/app/secure/products/product-edit/product-edit.component.ts","./src/app/secure/products/product-edit/product-edit.component.html","./src/app/secure/products/products.component.ts","./src/app/secure/products/products.component.html","./src/app/secure/profile/profile.component.ts","./src/app/secure/profile/profile.component.html","./src/app/secure/roles/role-create/role-create.component.ts","./src/app/secure/roles/role-create/role-create.component.html","./src/app/secure/roles/role-edit/role-edit.component.ts","./src/app/secure/roles/role-edit/role-edit.component.html","./src/app/secure/roles/roles.component.ts","./src/app/secure/roles/roles.component.html","./src/app/secure/secure.component.ts","./src/app/secure/secure.component.html","./src/app/secure/secure.module.ts","./src/app/secure/users/user-create/user-create.component.ts","./src/app/secure/users/user-create/user-create.component.html","./src/app/secure/users/user-edit/user-edit.component.ts","./src/app/secure/users/user-edit/user-edit.component.html","./src/app/secure/users/users.component.ts","./src/app/secure/users/users.component.html","./src/app/services/auth.service.ts","./src/app/services/image.service.ts","./src/app/services/order.service.ts","./src/app/services/permission.service.ts","./src/app/services/product.service.ts","./src/app/services/rest.service.ts","./src/app/services/role.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from \"./public/login/login.component\";\nimport {SecureComponent} from \"./secure/secure.component\";\nimport {RegisterComponent} from \"./public/register/register.component\";\nimport {PublicComponent} from \"./public/public.component\";\nimport {DashboardComponent} from \"./secure/dashboard/dashboard.component\";\nimport {UsersComponent} from \"./secure/users/users.component\";\nimport {ProfileComponent} from \"./secure/profile/profile.component\";\nimport {UserCreateComponent} from \"./secure/users/user-create/user-create.component\";\nimport {UserEditComponent} from \"./secure/users/user-edit/user-edit.component\";\nimport {RolesComponent} from \"./secure/roles/roles.component\";\nimport {RoleCreateComponent} from \"./secure/roles/role-create/role-create.component\";\nimport {RoleEditComponent} from \"./secure/roles/role-edit/role-edit.component\";\nimport {ProductsComponent} from \"./secure/products/products.component\";\nimport {ProductCreateComponent} from \"./secure/products/product-create/product-create.component\";\nimport {ProductEditComponent} from \"./secure/products/product-edit/product-edit.component\";\nimport {OrdersComponent} from \"./secure/orders/orders.component\";\nimport {OrderViewComponent} from \"./secure/orders/order-view/order-view.component\";\nimport {Permission} from \"./classes/permission\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecureComponent,\n    children: [\n      {path: '', redirectTo: '/dashboard', pathMatch: 'full'},\n      {path: 'dashboard', component: DashboardComponent},\n      {path: 'profile', component: ProfileComponent},\n      {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_users', 'edit_users']}\n      },\n      {path: 'users/create', component: UserCreateComponent},\n      {path: 'users/:id/edit', component: UserEditComponent},\n      {\n        path: 'roles',\n        component: RolesComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_roles', 'edit_roles']}\n      },\n      {path: 'roles/create', component: RoleCreateComponent},\n      {path: 'roles/:id/edit', component: RoleEditComponent},\n      {\n        path: 'products',\n        component: ProductsComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_products', 'edit_products']}\n      },\n      {path: 'products/create', component: ProductCreateComponent},\n      {path: 'products/:id/edit', component: ProductEditComponent},\n      {\n        path: 'orders',\n        component: OrdersComponent,\n        canActivate: [Permission],\n        data: {permissions: ['view_orders', 'edit_orders']}\n      },\n      {path: 'orders/:id', component: OrderViewComponent},\n    ]\n  },\n  {\n    path: '',\n    component: PublicComponent,\n    children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {SecureModule} from \"./secure/secure.module\";\nimport {PublicModule} from \"./public/public.module\";\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {TokenInterceptor} from \"./interceptors/token.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SecureModule,\n    PublicModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {User} from \"../interfaces/user\";\nimport {EventEmitter} from \"@angular/core\";\n\nexport class Auth {\n  private static _user: User;\n  static userEmitter = new EventEmitter<User>();\n\n  static set user(user: User) {\n    this._user = user;\n    this.userEmitter.emit(user);\n  }\n\n  static get user(): User {\n    return this._user;\n  }\n\n  static canAccess(permissions) {\n    if (!this._user) {\n      return false;\n    }\n\n    return this._user.permissions.filter(p => permissions.indexOf(p) !== -1).length > 0;\n  }\n}\n","import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\nimport {Auth} from \"./auth\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Permission implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Auth.canAccess(route.data.permissions) || false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpHeaders\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const req = request.clone({\n      withCredentials: true\n    });\n\n    return next.handle(req);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {Response} from \"../../interfaces/response\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss', './../public.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.authService.login(data).subscribe(\n      (res: any) => {\n        this.router.navigate(['/dashboard']);\n      }\n    )\n  }\n}\n","<form class=\"form-signin\" [formGroup]=\"form\" (submit)=\"submit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n  <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n  <input type=\"email\" formControlName=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" formControlName=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.scss']\n})\nexport class PublicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {PublicComponent} from './public.component';\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    PublicComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class PublicModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss', './../public.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      password_confirm: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.authService.register(data).subscribe(\n      res => {\n        console.log(res);\n      }\n    );\n  }\n}\n","<form class=\"form-signin\" [formGroup]=\"form\" (submit)=\"submit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n  <label for=\"firstName\" class=\"sr-only\">First Name</label>\n  <input type=\"text\" formControlName=\"first_name\" id=\"firstName\" class=\"form-control\" placeholder=\"First Name\" required autofocus>\n\n  <label for=\"lastName\" class=\"sr-only\">LastName</label>\n  <input type=\"text\" formControlName=\"last_name\" id=\"lastName\" class=\"form-control\" placeholder=\"LastName\" required autofocus>\n\n  <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n  <input type=\"email\" formControlName=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" formControlName=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n\n  <label for=\"inputPasswordConfirm\" class=\"sr-only\">Password Confirm</label>\n  <input type=\"password\" formControlName=\"password_confirm\" id=\"inputPasswordConfirm\" class=\"form-control\" placeholder=\"Password Confirm\" required>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n</form>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ImageService} from \"../../../services/image.service\";\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.scss']\n})\nexport class ImageUploadComponent implements OnInit {\n  @Output('fileUploaded') fileUploadedEmitter = new EventEmitter<string>();\n\n  constructor(private imageService: ImageService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  upload(files: FileList) {\n    const file = files.item(0);\n\n    const data = new FormData();\n    data.append('image', file);\n\n    this.imageService.upload(data).subscribe(\n      (res: any) => {\n        this.fileUploadedEmitter.emit(res.url);\n      }\n    );\n  }\n}\n","<label class=\"btn btn-primary\">\n  Upload <input type=\"file\" hidden (change)=\"upload($event.target.files)\">\n</label>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss']\n})\nexport class PaginatorComponent implements OnInit {\n  @Input('lastPage') lastPage;\n  @Output('pageChanged') pageChanged = new EventEmitter<number>();\n  currentPage = 1;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  prev() {\n    if (this.currentPage === 1) return;\n\n    this.currentPage--;\n    this.pageChanged.emit(this.currentPage);\n  }\n\n  next() {\n    if (this.currentPage === this.lastPage) return;\n\n    this.currentPage++;\n    this.pageChanged.emit(this.currentPage);\n  }\n}\n","<nav>\n  <ul class=\"pagination\">\n    <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"prev()\">Previous</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"next()\">Next</a></li>\n  </ul>\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../services/order.service\";\nimport {Response} from \"../../interfaces/response\";\nimport * as c3 from 'c3';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private orderService: OrderService) {\n  }\n\n  ngOnInit(): void {\n    let chart = c3.generate({\n      bindto: '#chart',\n      data: {\n        x: 'x',\n        columns: [\n          ['x'],\n          ['Sales'],\n        ],\n        types: {\n          Sales: 'bar'\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: '%Y-%m-%d'\n          }\n        }\n      }\n    });\n\n    this.orderService.chart().subscribe(\n      (res: Response) => {\n        const records = res.data;\n\n        chart.load({\n          columns: [\n            ['x', ...records.map(r => r.date)],\n            ['Sales', ...records.map(r => r.sum)]\n          ]\n        });\n      }\n    );\n  }\n\n}\n","<h2>Daily Sales</h2>\n\n<div id=\"chart\"></div>\n","import {Component, OnInit} from '@angular/core';\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n  <div class=\"sidebar-sticky pt-3\">\n    <ul class=\"nav flex-column\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_users', 'edit_users'])\">\n        <a class=\"nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_roles', 'edit_roles'])\">\n        <a class=\"nav-link\" routerLink=\"/roles\" routerLinkActive=\"active\">Roles</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_products', 'edit_products'])\">\n        <a class=\"nav-link\" routerLink=\"/products\" routerLinkActive=\"active\">Products</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"canAccess(['view_orders', 'edit_orders'])\">\n        <a class=\"nav-link\" routerLink=\"/orders\" routerLinkActive=\"active\">Orders</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {User} from \"../../interfaces/user\";\nimport {Router} from \"@angular/router\";\nimport {Auth} from \"../../classes/auth\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  user: User = null;\n\n  constructor(private router: Router, private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    Auth.userEmitter.subscribe(\n      (user: User) => {\n        this.user = user;\n      }\n    );\n  }\n\n  logout() {\n    this.authService.logout({}).subscribe(\n      () => {\n        this.router.navigate(['/login']);\n      }\n    )\n  }\n\n}\n","<nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n  <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"#\">Company name</a>\n\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"p-2 text-white\" routerLink=\"/profile\">{{user?.first_name}} {{user?.last_name}}</a>\n    <a class=\"p-2 text-white\" href=\"javascript:void(0)\" (click)=\"logout()\">Sign out</a>\n  </nav>\n</nav>\n\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../../services/order.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\nimport {OrderItem} from \"../../../interfaces/order-item\";\n\n@Component({\n  selector: 'app-order-view',\n  templateUrl: './order-view.component.html',\n  styleUrls: ['./order-view.component.scss']\n})\nexport class OrderViewComponent implements OnInit {\n  orderItems: OrderItem[] = []\n\n  constructor(\n    private orderService: OrderService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      params => {\n        this.orderService.get(params.id).subscribe(\n          (res: Response) => {\n            this.orderItems = res.data.order_items;\n          }\n        )\n      }\n    )\n  }\n\n}\n","<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Product Title</th>\n        <th>Price</th>\n        <th>Quantity</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let orderItem of orderItems\">\n        <td>{{orderItem.id}}</td>\n        <td>{{orderItem.product_title}}</td>\n        <td>{{orderItem.price}}</td>\n        <td>{{orderItem.quantity}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from \"../../services/order.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Order} from \"../../interfaces/order\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[] = [];\n  lastPage: number;\n\n  constructor(\n    private orderService: OrderService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.orderService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.orders = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    );\n  }\n\n  export() {\n    this.orderService.export().subscribe(\n      res => {\n        const blob = new Blob([res], {type: 'text/csv'});\n        const downloadUrl = window.URL.createObjectURL(res);\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.download = 'orders.csv';\n        link.click();\n      }\n    )\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_orders'])\">\n    <a href=\"javascript:void(0)\" (click)=\"export()\" class=\"btn btn-sm btn-outline-secondary\">Export</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Total</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orders\">\n        <td>{{order.id}}</td>\n        <td>{{order.first_name}} {{order.last_name}}</td>\n        <td>{{order.email}}</td>\n        <td>{{order.total}}</td>\n        <td>\n          <div class=\"btn-group mr-2\">\n            <a [routerLink]=\"['/orders', order.id]\" class=\"btn btn-sm btn-outline-secondary\">View</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {Router} from \"@angular/router\";\nimport {ImageService} from \"../../../services/image.service\";\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      title: '',\n      description: '',\n      image: '',\n      price: ''\n    });\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.productService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/products']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\">\n  </div>\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea class=\"form-control\" name=\"description\" formControlName=\"description\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label>Image</label>\n    <div class=\"input-group\">\n      <input #image type=\"text\" class=\"form-control\" name=\"Image\" formControlName=\"image\">\n      <div class=\"input-group-append\">\n        <app-image-upload (fileUploaded)=\"image.value = $event\"></app-image-upload>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Price</label>\n    <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\">\n  </div>\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Product} from \"../../../interfaces/product\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit {\n  form: FormGroup;\n  product: Product;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      title: '',\n      description: '',\n      image: '',\n      price: ''\n    });\n\n    this.route.params.subscribe(\n      params => {\n        this.productService.get(params.id).subscribe(\n          (res: Response) => {\n            this.product = res.data;\n            this.form.patchValue(this.product);\n          }\n        )\n      }\n    )\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.productService.update(this.product.id, data).subscribe(\n      res => {\n        this.router.navigate(['/products']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\">\n  </div>\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea class=\"form-control\" name=\"description\" formControlName=\"description\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label>Image</label>\n    <div class=\"input-group\">\n      <input #image type=\"text\" class=\"form-control\" name=\"Image\" formControlName=\"image\">\n      <div class=\"input-group-append\">\n        <app-image-upload (fileUploaded)=\"form.patchValue({image: $event})\"></app-image-upload>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Price</label>\n    <input type=\"number\" class=\"form-control\" name=\"price\" formControlName=\"price\">\n  </div>\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Product} from \"../../interfaces/product\";\nimport {ProductService} from \"../../services/product.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  products: Product[] = [];\n  lastPage: number;\n\n  constructor(\n    private productService: ProductService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.productService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.products = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.productService.delete(id).subscribe(\n        res => {\n          this.products = this.products.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_products'])\">\n    <a routerLink=\"/products/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Image</th>\n        <th>Title</th>\n        <th>Description</th>\n        <th>Price</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of products\">\n        <td>{{product.id}}</td>\n        <td><img [src]=\"product.image\" width=\"50\" height=\"50\" /></td>\n        <td>{{product.title}}</td>\n        <td>{{product.description}}</td>\n        <td>{{product.price}}</td>\n        <td>\n          <div class=\"btn-group mr-2\" *ngIf=\"canAccess(['edit_products'])\">\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/products', product.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n            <a href=\"javascript:void(0)\" (click)=\"delete(product.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Auth} from \"../../classes/auth\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {User} from \"../../interfaces/user\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  infoForm: FormGroup;\n  passwordForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    const user = Auth.user;\n\n    this.infoForm = this.formBuilder.group({\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n\n    this.passwordForm = this.formBuilder.group({\n      password: '',\n      password_confirm: ''\n    });\n  }\n\n  infoSubmit() {\n    const data = this.infoForm.getRawValue();\n\n    this.authService.updateInfo(data).subscribe(\n      (user: User) => {\n        Auth.user = user;\n      }\n    );\n  }\n\n  passwordSubmit() {\n    const data = this.passwordForm.getRawValue();\n\n    this.authService.updatePassword(data).subscribe(\n      res => {\n        console.log(res);\n      }\n    );\n  }\n\n}\n","<h2>Account Information</h2>\n<hr>\n<form [formGroup]=\"infoForm\" (submit)=\"infoSubmit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" formControlName=\"first_name\" class=\"form-control\" name=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" formControlName=\"last_name\" class=\"form-control\" name=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\" name=\"email\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n\n<h2 class=\"mt-4\">Change Password</h2>\n<hr>\n<form [formGroup]=\"passwordForm\" (submit)=\"passwordSubmit()\">\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" name=\"password\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password Confirm</label>\n    <input type=\"password\" formControlName=\"password_confirm\" class=\"form-control\" name=\"password_confirm\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {PermissionService} from \"../../../services/permission.service\";\nimport {Response} from \"../../../interfaces/response\";\nimport {Permission} from \"../../../interfaces/permission\";\nimport {FormArray, FormBuilder, FormGroup} from \"@angular/forms\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-role-create',\n  templateUrl: './role-create.component.html',\n  styleUrls: ['./role-create.component.scss']\n})\nexport class RoleCreateComponent implements OnInit {\n  permissions: Permission[] = [];\n  form: FormGroup;\n\n  constructor(\n    private permissionService: PermissionService,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: '',\n      permissions: this.formBuilder.array([])\n    })\n\n    this.permissionService.all().subscribe(\n      (res: Response) => {\n        this.permissions = res.data;\n        this.permissions.forEach((p: Permission) => {\n          this.permissionArray.push(\n            this.formBuilder.group({\n              value: false,\n              id: p.id\n            })\n          )\n        });\n      }\n    )\n  }\n\n  get permissionArray() {\n    return this.form.get('permissions') as FormArray;\n  }\n\n  submit() {\n    const formData = this.form.getRawValue();\n\n    const data = {\n      name: formData.name,\n      permissions: formData.permissions.filter(p => p.value === true).map(p => p.id)\n    };\n\n    this.roleService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/roles']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\" id=\"name\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\" formArrayName=\"permissions\">\n    <label class=\"col-sm-2 col-form-label\">Permissions</label>\n    <div class=\"col-sm-10\">\n      <div class=\"form-check form-check-inline col-3\" *ngFor=\"let permission of permissions; let i = index\" [formGroupName]=\"i\">\n        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"value\">\n        <label class=\"form-check-label\">{{permission.name}}</label>\n      </div>\n    </div>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {Permission} from \"../../../interfaces/permission\";\nimport {FormArray, FormBuilder, FormGroup} from \"@angular/forms\";\nimport {PermissionService} from \"../../../services/permission.service\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\nimport {Role} from \"../../../interfaces/role\";\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.component.html',\n  styleUrls: ['./role-edit.component.scss']\n})\nexport class RoleEditComponent implements OnInit {\n  permissions: Permission[] = [];\n  form: FormGroup;\n  role: Role;\n\n  constructor(\n    private permissionService: PermissionService,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: '',\n      permissions: this.formBuilder.array([])\n    })\n\n    this.permissionService.all().subscribe(\n      (res: Response) => {\n        this.permissions = res.data;\n        this.permissions.forEach((p: Permission) => {\n          this.permissionArray.push(\n            this.formBuilder.group({\n              value: false,\n              id: p.id\n            })\n          )\n        });\n      }\n    );\n\n    this.route.params.subscribe(\n      params => {\n        this.roleService.get(params.id).subscribe(\n          (res: Response) => {\n            this.role = res.data;\n            let values = this.permissions.map((p: Permission) => {\n              let selected = this.role.permissions\n                .filter((rolePermission: Permission) => rolePermission.id === p.id).length > 0;\n\n              return {\n                value: selected,\n                id: p.id\n              }\n            });\n\n            this.form.patchValue({\n              name: this.role.name,\n              permissions: values\n            });\n          }\n        )\n      }\n    )\n  }\n\n  get permissionArray() {\n    return this.form.get('permissions') as FormArray;\n  }\n\n  submit() {\n    const formData = this.form.getRawValue();\n\n    const data = {\n      name: formData.name,\n      permissions: formData.permissions.filter(p => p.value === true).map(p => p.id)\n    };\n\n    this.roleService.update(this.role.id, data).subscribe(\n      res => {\n        this.router.navigate(['/roles']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\" id=\"name\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\" formArrayName=\"permissions\">\n    <label class=\"col-sm-2 col-form-label\">Permissions</label>\n    <div class=\"col-sm-10\">\n      <div class=\"form-check form-check-inline col-3\" *ngFor=\"let permission of permissions; let i = index\" [formGroupName]=\"i\">\n        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"value\">\n        <label class=\"form-check-label\">{{permission.name}}</label>\n      </div>\n    </div>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {Role} from \"../../interfaces/role\";\nimport {RoleService} from \"../../services/role.service\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n  roles: Role[] = [];\n\n  constructor(private roleService: RoleService) { }\n\n  ngOnInit(): void {\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.roleService.delete(id).subscribe(\n        res => {\n          this.roles = this.roles.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_roles'])\">\n    <a routerLink=\"/roles/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let role of roles\">\n        <td>{{role.id}}</td>\n        <td>{{role.name}}</td>\n        <td>\n            <div class=\"btn-group mr-2\" *ngIf=\"canAccess(['edit_roles'])\">\n              <a href=\"javascript:void(0)\" [routerLink]=\"['/roles', role.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n              <a href=\"javascript:void(0)\" (click)=\"delete(role.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n            </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../interfaces/user\";\nimport {Auth} from \"../classes/auth\";\nimport {Response} from \"../interfaces/response\";\n\n@Component({\n  selector: 'app-secure',\n  templateUrl: './secure.component.html',\n  styleUrls: ['./secure.component.scss']\n})\nexport class SecureComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.authService.user().subscribe(\n      (res: Response) => {\n        this.user = res.data;\n        Auth.user = this.user;\n      },\n      err => {\n        this.router.navigate(['/login']);\n      }\n    )\n  }\n\n}\n","<app-nav></app-nav>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <app-menu></app-menu>\n\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n      <router-outlet *ngIf=\"user\"></router-outlet>\n    </main>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SecureComponent} from './secure.component';\nimport {NavComponent} from \"./nav/nav.component\";\nimport {MenuComponent} from \"./menu/menu.component\";\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {UsersComponent} from './users/users.component';\nimport {RouterModule} from \"@angular/router\";\nimport {ProfileComponent} from './profile/profile.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {UserCreateComponent} from './users/user-create/user-create.component';\nimport {UserEditComponent} from './users/user-edit/user-edit.component';\nimport {RolesComponent} from './roles/roles.component';\nimport {RoleCreateComponent} from './roles/role-create/role-create.component';\nimport {RoleEditComponent} from './roles/role-edit/role-edit.component';\nimport {ProductsComponent} from './products/products.component';\nimport { PaginatorComponent } from './components/paginator/paginator.component';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { ImageUploadComponent } from './components/image-upload/image-upload.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderViewComponent } from './orders/order-view/order-view.component';\n\n\n@NgModule({\n  declarations: [\n    SecureComponent,\n    NavComponent,\n    MenuComponent,\n    DashboardComponent,\n    UsersComponent,\n    ProfileComponent,\n    UserCreateComponent,\n    UserEditComponent,\n    RolesComponent,\n    RoleCreateComponent,\n    RoleEditComponent,\n    ProductsComponent,\n    PaginatorComponent,\n    ProductCreateComponent,\n    ProductEditComponent,\n    ImageUploadComponent,\n    OrdersComponent,\n    OrderViewComponent\n  ],\n  exports: [\n    SecureComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SecureModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {Role} from \"../../../interfaces/role\";\nimport {UserService} from \"../../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n  form: FormGroup;\n  roles: Role[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private roleService: RoleService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      role_id: ''\n    });\n\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    )\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.userService.create(data).subscribe(\n      res => {\n        this.router.navigate(['/users']);\n      }\n    );\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"first_name\" formControlName=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"last_name\" formControlName=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" class=\"form-control\" name=\"email\" formControlName=\"email\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select name=\"role_id\" class=\"form-control\" formControlName=\"role_id\">\n      <option *ngFor=\"let role of roles\" [ngValue]=\"role.id\">\n        {{role.name}}\n      </option>\n    </select>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Role} from \"../../../interfaces/role\";\nimport {UserService} from \"../../../services/user.service\";\nimport {RoleService} from \"../../../services/role.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {User} from \"../../../interfaces/user\";\nimport {Response} from \"../../../interfaces/response\";\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  form: FormGroup;\n  roles: Role[] = [];\n  user: User;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private roleService: RoleService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      role_id: ''\n    });\n\n    this.roleService.all().subscribe(\n      (res: Response) => {\n        this.roles = res.data;\n      }\n    );\n\n    this.route.params.subscribe(\n      params => {\n        this.userService.get(params.id).subscribe(\n          (res: Response) => {\n            this.user = res.data;\n            this.form.patchValue({\n              first_name: this.user.first_name,\n              last_name: this.user.last_name,\n              email: this.user.email,\n              role_id: this.user.role.id\n            });\n          }\n        )\n      }\n    );\n  }\n\n  submit() {\n    const data = this.form.getRawValue();\n\n    this.userService.update(this.user.id, data).subscribe(\n      res => {\n        this.router.navigate(['/users']);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"first_name\" formControlName=\"first_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"last_name\" formControlName=\"last_name\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" class=\"form-control\" name=\"email\" formControlName=\"email\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select name=\"role_id\" class=\"form-control\" formControlName=\"role_id\">\n      <option *ngFor=\"let role of roles\" [ngValue]=\"role.id\">\n        {{role.name}}\n      </option>\n    </select>\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../interfaces/user\";\nimport {Response} from \"../../interfaces/response\";\nimport {Auth} from \"../../classes/auth\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  lastPage: number;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(currentPage = 1) {\n    this.userService.all(currentPage).subscribe(\n      (res: Response) => {\n        this.users = res.data;\n        this.lastPage = res.meta.last_page;\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this record?')) {\n      this.userService.delete(id).subscribe(\n        res => {\n          this.users = this.users.filter(el => el.id !== id);\n        }\n      );\n    }\n  }\n\n  canAccess(permissions) {\n    return Auth.canAccess(permissions);\n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <div class=\"btn-toolbar mb-2 mb-md-0\" *ngIf=\"canAccess(['edit_users'])\">\n    <a routerLink=\"/users/create\" class=\"btn btn-sm btn-outline-secondary\">Add</a>\n  </div>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Role</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{user.id}}</td>\n        <td>{{user.first_name}} {{user.last_name}}</td>\n        <td>{{user.email}}</td>\n        <td>{{user.role.name}}</td>\n        <td>\n          <div class=\"btn-group mr-2\"  *ngIf=\"canAccess(['edit_users'])\">\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/users', user.id, 'edit']\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>\n            <a href=\"javascript:void(0)\" (click)=\"delete(user.id)\" class=\"btn btn-sm btn-outline-secondary\">Delete</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-paginator\n  [lastPage]=\"lastPage\"\n  (pageChanged)=\"refresh($event)\"\n></app-paginator>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  login(data) {\n    return this.http.post(`${environment.api}/login`, data);\n  }\n\n  logout(data) {\n    return this.http.post(`${environment.api}/logout`, data);\n  }\n\n  register(data) {\n    return this.http.post(`${environment.api}/register`, data);\n  }\n\n  user() {\n    return this.http.get(`${environment.api}/user`);\n  }\n\n  updateInfo(data) {\n    return this.http.put(`${environment.api}/users/info`, data);\n  }\n\n  updatePassword(data) {\n    return this.http.put(`${environment.api}/users/password`, data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  upload(data) {\n    return this.http.post(`${environment.api}/upload`, data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService extends RestService {\n  endpoint(): string {\n    return \"orders\";\n  }\n\n  export() {\n    return this.http.get(`${environment.api}/export`, {responseType: 'blob'});\n  }\n\n  chart(){\n    return this.http.get(`${environment.api}/chart`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionService extends RestService {\n  endpoint(): string {\n    return \"permissions\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService extends RestService {\n  endpoint(): string {\n    return \"products\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class RestService {\n\n  abstract endpoint(): string;\n\n  constructor(protected http: HttpClient) {\n  }\n\n  get url() {\n    return `${environment.api}/${this.endpoint()}`;\n  }\n\n  all(page?: number) {\n    let url = this.url;\n\n    if (page) {\n      url += `?page=${page}`;\n    }\n\n    return this.http.get(url);\n  }\n\n  get(id: number) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(this.url, data);\n  }\n\n  update(id: number, data) {\n    return this.http.put(`${this.url}/${id}`, data);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends RestService {\n  endpoint(): string {\n    return \"roles\";\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {RestService} from \"./rest.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends RestService {\n  endpoint(): string {\n    return \"users\";\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}